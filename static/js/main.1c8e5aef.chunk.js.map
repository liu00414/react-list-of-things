{"version":3,"sources":["logo.svg","components/AddForm.js","components/Item.js","components/ListContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AddForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","saveItem","ev","preventDefault","console","log","nameRef","current","value","countryRef","name","country","id","Date","now","dataArray","state","data","obj","push","setState","props","changeParentState","React","createRef","react_default","a","createElement","onSubmit","type","ref","placeholder","className","Component","Item","edit","editing","nameValue","save","nameInput","countryInput","delete","renderEditingMode","Fragment","defaultValue","onClick","renderDefault","countryValue","ListContainer","map","index","components_Item","key","Header","App","handler","updateData","findIndex","item","splice","changes","components_AddForm","components_ListContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c8e5aef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\n\nclass AddForm extends Component {\n    \n    constructor(){\n        super();\n        this.nameRef=React.createRef();\n        this.countryRef=React.createRef();\n    }\n    componentDidMount(){\n        this.setState({\n            data:this.props.data,\n        })\n    }\n    saveItem=(ev)=>{\n        ev.preventDefault();\n        console.log(\"Save!\");\n        console.log(this.nameRef.current.value);\n        console.log(this.countryRef.current.value);\n        let name=this.nameRef.current.value;\n        let country=this.countryRef.current.value;\n        let id=Date.now();\n        let dataArray=this.state.data;\n        let obj={id,name,country};\n        dataArray.push(obj);\n        this.setState({data:dataArray});\n        this.props.changeParentState(this.state);\n        console.log(dataArray);\n    }\n    \n  render() {\n    return (\n      <div>\n        <form onSubmit={this.saveItem}>\n            <h3>Add New Singer</h3>\n            <input type=\"text\" ref={this.nameRef} placeholder=\"Name\"/>\n            <input type=\"text\" ref={this.countryRef} placeholder=\"Country\"/>\n            <button className=\"save\">Save</button>\n        </form>\n        </div>\n    );\n  }\n}\n\nexport default AddForm;\n","import React, { Component } from 'react';\n\n\nclass Item extends Component {\nconstructor(){\n        super();\n        this.nameInput=React.createRef();\n        this.countryInput=React.createRef();\n        this.state={};\n    }\ncomponentDidMount(){\n        this.setState({\n            editing:false, \n            id:this.props.id,\n            name:this.props.nameValue,\n            country:this.props.countryValue\n        })\n    }\n    \nedit=(ev)=>{\n    this.setState({editing:!this.state.editing})\n    console.log(this.props.nameValue);\n}\nsave=(ev)=>{  \n    this.setState({\n        editing:false,\n        id:this.props.id,\n        name:this.nameInput.current.value,\n        country:this.countryInput.current.value\n    },()=>this.props.changeParentState(this.state));  \n}\ndelete=(ev)=>{  \n    console.log(\"de\");\n    this.setState({\n        delete:true,\n        id:this.props.id\n    },()=>this.props.changeParentState(this.state));  \n}\nrenderEditingMode=()=>{\n   return <React.Fragment>  \n        <li>\n        \n            <p><input type=\"text\" defaultValue={this.state.name} ref={this.nameInput}/></p>\n            <p><input type=\"text\" defaultValue={this.state.country} ref={this.countryInput}/></p>           \n            <button onClick={this.save} className=\"save\">Save</button>\n           \n        </li>\n        </React.Fragment>\n}\nrenderDefault=()=>{\n    return <React.Fragment>  \n        <li>\n            <p className=\"name\">{this.state.name}</p>\n            <p className=\"country\">{this.state.country}</p>\n            <button onClick={this.edit} className=\"edit\">Edit</button>\n            <button onClick={this.delete} className=\"delete\">Delete</button>\n            \n        </li>\n        </React.Fragment>\n}\n  render() {\n    return (\n    this.state.editing?this.renderEditingMode():this.renderDefault()            \n    );\n  }\n}\n\nexport default Item;\n","import React, { Component } from 'react';\nimport Item from './Item.js';\n\n\nclass ListContainer extends Component {\n    \n  render() {\n      let dataArray=this.props.data;\n      console.log(dataArray);\n    return (\n      <div>\n        <h3>List of Singers</h3>\n        <ul>\n        {dataArray.map((obj,index)=>(<Item key={obj.id} id={obj.id} nameValue={obj.name} countryValue={obj.country} changeParentState={this.props.changeParentState} />))}\n        \n        </ul>\n        </div>\n    );\n  }\n}\n\nexport default ListContainer;\n","import React, { Component } from 'react';\nimport AddForm from './components/AddForm.js';\nimport ListContainer from './components/ListContainer.js';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction Header(props){\n    return(\n        <h1>\n            Singers Around The World\n        </h1>    \n    )\n}\nclass App extends Component {\n    constructor(){\n        super();\n        this.nameRef=React.createRef();\n        this.countryRef=React.createRef();\n        this.state={\n            data:[\n                {id:1,name:\"Shawn Mendes\",country:\"Canada\"}\n            ]\n        }\n    }\n    handler=(obj)=>{\n        console.log(\"Parent!\");\n        this.setState(obj);\n        console.log(this.state);\n    }\n    updateData=(obj)=>{\n        let data=this.state.data;\n        let index=data.findIndex(item=>item.id==obj.id);\n        if(!obj.delete){\n        let changes={\n            id:obj.id,\n            name:obj.name,\n            country:obj.country\n        }\n        data[index]=changes;\n        }else{\n            data.splice(index,1);\n//            console.log(data);\n//            console.log(obj.id);\n//            console.log(index);       \n        }\n        this.setState({data});\n        console.log(\"Updated\");  \n    }\n    \n  render() {\n    \n    return (\n      <div className=\"App\">\n       <Header />\n        <AddForm changeParentState={this.handler} data={this.state.data}/>\n        <ListContainer changeParentState={this.updateData} data={this.state.data}/>\n        \n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}